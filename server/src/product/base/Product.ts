/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Attribute } from "../../attribute/base/Attribute";
import {
  ValidateNested,
  IsOptional,
  IsJSON,
  IsDate,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { Brand } from "../../brand/base/Brand";
import { CartItem } from "../../cartItem/base/CartItem";
import { GraphQLJSONObject } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { OrderItem } from "../../orderItem/base/OrderItem";
@ObjectType()
class Product {
  @ApiProperty({
    required: false,
    type: () => Attribute,
  })
  @ValidateNested()
  @Type(() => Attribute)
  @IsOptional()
  attributeId?: Attribute | null;

  @ApiProperty({
    required: false,
    type: () => Brand,
  })
  @ValidateNested()
  @Type(() => Brand)
  @IsOptional()
  brandid?: Brand | null;

  @ApiProperty({
    required: false,
    type: () => [CartItem],
  })
  @ValidateNested()
  @Type(() => CartItem)
  @IsOptional()
  carts?: Array<CartItem>;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSONObject)
  categoryid!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  image!: string;

  @ApiProperty({
    required: false,
    type: () => [OrderItem],
  })
  @ValidateNested()
  @Type(() => OrderItem)
  @IsOptional()
  orderItems?: Array<OrderItem>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  price!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  productname!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  sku!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Product };
